// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.0
// source: v1/malou_web.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunnerStatusType int32

const (
	RunnerStatusType_Offline RunnerStatusType = 0
	RunnerStatusType_Online  RunnerStatusType = 1
)

// Enum value maps for RunnerStatusType.
var (
	RunnerStatusType_name = map[int32]string{
		0: "Offline",
		1: "Online",
	}
	RunnerStatusType_value = map[string]int32{
		"Offline": 0,
		"Online":  1,
	}
)

func (x RunnerStatusType) Enum() *RunnerStatusType {
	p := new(RunnerStatusType)
	*p = x
	return p
}

func (x RunnerStatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RunnerStatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_malou_web_proto_enumTypes[0].Descriptor()
}

func (RunnerStatusType) Type() protoreflect.EnumType {
	return &file_v1_malou_web_proto_enumTypes[0]
}

func (x RunnerStatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RunnerStatusType.Descriptor instead.
func (RunnerStatusType) EnumDescriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{0}
}

// CreateRunner
type CreateRunnerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels []string          `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	Env    map[string]string `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateRunnerReq) Reset() {
	*x = CreateRunnerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRunnerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRunnerReq) ProtoMessage() {}

func (x *CreateRunnerReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRunnerReq.ProtoReflect.Descriptor instead.
func (*CreateRunnerReq) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRunnerReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRunnerReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateRunnerReq) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

type CreateRunnerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CreateRunnerResp) Reset() {
	*x = CreateRunnerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRunnerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRunnerResp) ProtoMessage() {}

func (x *CreateRunnerResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRunnerResp.ProtoReflect.Descriptor instead.
func (*CreateRunnerResp) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRunnerResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateRunnerResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// 更新runner
type UpdateRunnerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Labels []string          `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	Env    map[string]string `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateRunnerReq) Reset() {
	*x = UpdateRunnerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRunnerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRunnerReq) ProtoMessage() {}

func (x *UpdateRunnerReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRunnerReq.ProtoReflect.Descriptor instead.
func (*UpdateRunnerReq) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRunnerReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRunnerReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRunnerReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateRunnerReq) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

type UpdateRunnerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *UpdateRunnerResp) Reset() {
	*x = UpdateRunnerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRunnerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRunnerResp) ProtoMessage() {}

func (x *UpdateRunnerResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRunnerResp.ProtoReflect.Descriptor instead.
func (*UpdateRunnerResp) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateRunnerResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRunnerResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// RunnerInfo
type RunnerInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunnerId int64 `protobuf:"varint,1,opt,name=runner_id,json=runnerId,proto3" json:"runner_id,omitempty"`
}

func (x *RunnerInfoReq) Reset() {
	*x = RunnerInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerInfoReq) ProtoMessage() {}

func (x *RunnerInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerInfoReq.ProtoReflect.Descriptor instead.
func (*RunnerInfoReq) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{4}
}

func (x *RunnerInfoReq) GetRunnerId() int64 {
	if x != nil {
		return x.RunnerId
	}
	return 0
}

type RunnerInfoHealth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuPercent   float64           `protobuf:"fixed64,2,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	MemoryInfo   *MemoryInfo       `protobuf:"bytes,3,opt,name=memory_info,json=memoryInfo,proto3" json:"memory_info,omitempty"`
	DiskInfo     *DiskInfo         `protobuf:"bytes,4,opt,name=disk_info,json=diskInfo,proto3" json:"disk_info,omitempty"`
	WorkerStatus map[string]string `protobuf:"bytes,5,rep,name=worker_status,json=workerStatus,proto3" json:"worker_status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RunnerInfoHealth) Reset() {
	*x = RunnerInfoHealth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerInfoHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerInfoHealth) ProtoMessage() {}

func (x *RunnerInfoHealth) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerInfoHealth.ProtoReflect.Descriptor instead.
func (*RunnerInfoHealth) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{5}
}

func (x *RunnerInfoHealth) GetCpuPercent() float64 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *RunnerInfoHealth) GetMemoryInfo() *MemoryInfo {
	if x != nil {
		return x.MemoryInfo
	}
	return nil
}

func (x *RunnerInfoHealth) GetDiskInfo() *DiskInfo {
	if x != nil {
		return x.DiskInfo
	}
	return nil
}

func (x *RunnerInfoHealth) GetWorkerStatus() map[string]string {
	if x != nil {
		return x.WorkerStatus
	}
	return nil
}

type RunnerInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code      string            `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Labels    []string          `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	Env       map[string]string `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedAt int64             `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64             `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Health    *RunnerInfoHealth `protobuf:"bytes,7,opt,name=health,proto3" json:"health,omitempty"`
	Status    RunnerStatusType  `protobuf:"varint,8,opt,name=status,proto3,enum=RunnerStatusType" json:"status,omitempty"`
}

func (x *RunnerInfoResp) Reset() {
	*x = RunnerInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerInfoResp) ProtoMessage() {}

func (x *RunnerInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerInfoResp.ProtoReflect.Descriptor instead.
func (*RunnerInfoResp) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{6}
}

func (x *RunnerInfoResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunnerInfoResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RunnerInfoResp) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RunnerInfoResp) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *RunnerInfoResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RunnerInfoResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *RunnerInfoResp) GetHealth() *RunnerInfoHealth {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *RunnerInfoResp) GetStatus() RunnerStatusType {
	if x != nil {
		return x.Status
	}
	return RunnerStatusType_Offline
}

// RunnerList
type RunnerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size   int64    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Page   int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Code   string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Name   string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Labels []string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *RunnerListReq) Reset() {
	*x = RunnerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerListReq) ProtoMessage() {}

func (x *RunnerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerListReq.ProtoReflect.Descriptor instead.
func (*RunnerListReq) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{7}
}

func (x *RunnerListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RunnerListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RunnerListReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RunnerListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunnerListReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RunnerListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code      string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name      string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Labels    []string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	CreatedAt int64    `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64    `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RunnerListItem) Reset() {
	*x = RunnerListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerListItem) ProtoMessage() {}

func (x *RunnerListItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerListItem.ProtoReflect.Descriptor instead.
func (*RunnerListItem) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{8}
}

func (x *RunnerListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RunnerListItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RunnerListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunnerListItem) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RunnerListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RunnerListItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type RunnerListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*RunnerListItem `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *RunnerListResp) Reset() {
	*x = RunnerListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerListResp) ProtoMessage() {}

func (x *RunnerListResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerListResp.ProtoReflect.Descriptor instead.
func (*RunnerListResp) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{9}
}

func (x *RunnerListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RunnerListResp) GetData() []*RunnerListItem {
	if x != nil {
		return x.Data
	}
	return nil
}

// CreatePipeline
type CreatePipelineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Steps []*Step `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *CreatePipelineReq) Reset() {
	*x = CreatePipelineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePipelineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineReq) ProtoMessage() {}

func (x *CreatePipelineReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineReq.ProtoReflect.Descriptor instead.
func (*CreatePipelineReq) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePipelineReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePipelineReq) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

type CreatePipelineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineId int64 `protobuf:"varint,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
}

func (x *CreatePipelineResp) Reset() {
	*x = CreatePipelineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePipelineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineResp) ProtoMessage() {}

func (x *CreatePipelineResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineResp.ProtoReflect.Descriptor instead.
func (*CreatePipelineResp) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePipelineResp) GetPipelineId() int64 {
	if x != nil {
		return x.PipelineId
	}
	return 0
}

// UpdatePipeline
type UpdatePipelineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineId int64   `protobuf:"varint,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Steps      []*Step `protobuf:"bytes,3,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *UpdatePipelineReq) Reset() {
	*x = UpdatePipelineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePipelineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePipelineReq) ProtoMessage() {}

func (x *UpdatePipelineReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePipelineReq.ProtoReflect.Descriptor instead.
func (*UpdatePipelineReq) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{12}
}

func (x *UpdatePipelineReq) GetPipelineId() int64 {
	if x != nil {
		return x.PipelineId
	}
	return 0
}

func (x *UpdatePipelineReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePipelineReq) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

type UpdatePipelineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineId int64 `protobuf:"varint,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
}

func (x *UpdatePipelineResp) Reset() {
	*x = UpdatePipelineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePipelineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePipelineResp) ProtoMessage() {}

func (x *UpdatePipelineResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePipelineResp.ProtoReflect.Descriptor instead.
func (*UpdatePipelineResp) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{13}
}

func (x *UpdatePipelineResp) GetPipelineId() int64 {
	if x != nil {
		return x.PipelineId
	}
	return 0
}

// 获取pipeline详情
type PipelineInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineId int64 `protobuf:"varint,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
}

func (x *PipelineInfoReq) Reset() {
	*x = PipelineInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineInfoReq) ProtoMessage() {}

func (x *PipelineInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineInfoReq.ProtoReflect.Descriptor instead.
func (*PipelineInfoReq) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{14}
}

func (x *PipelineInfoReq) GetPipelineId() int64 {
	if x != nil {
		return x.PipelineId
	}
	return 0
}

type PipelineInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineId int64   `protobuf:"varint,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Steps      []*Step `protobuf:"bytes,3,rep,name=steps,proto3" json:"steps,omitempty"`
	CreatedAt  int64   `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  int64   `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PipelineInfoResp) Reset() {
	*x = PipelineInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineInfoResp) ProtoMessage() {}

func (x *PipelineInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineInfoResp.ProtoReflect.Descriptor instead.
func (*PipelineInfoResp) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{15}
}

func (x *PipelineInfoResp) GetPipelineId() int64 {
	if x != nil {
		return x.PipelineId
	}
	return 0
}

func (x *PipelineInfoResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineInfoResp) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *PipelineInfoResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PipelineInfoResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 获取pipeline列表
type PipelineListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Page int64  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PipelineListReq) Reset() {
	*x = PipelineListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineListReq) ProtoMessage() {}

func (x *PipelineListReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineListReq.ProtoReflect.Descriptor instead.
func (*PipelineListReq) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{16}
}

func (x *PipelineListReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PipelineListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PipelineListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PipelineListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineId int64  `protobuf:"varint,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt  int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  int64  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PipelineListItem) Reset() {
	*x = PipelineListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineListItem) ProtoMessage() {}

func (x *PipelineListItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineListItem.ProtoReflect.Descriptor instead.
func (*PipelineListItem) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{17}
}

func (x *PipelineListItem) GetPipelineId() int64 {
	if x != nil {
		return x.PipelineId
	}
	return 0
}

func (x *PipelineListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PipelineListItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type PipelineListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*PipelineListItem `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PipelineListResp) Reset() {
	*x = PipelineListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineListResp) ProtoMessage() {}

func (x *PipelineListResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineListResp.ProtoReflect.Descriptor instead.
func (*PipelineListResp) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{18}
}

func (x *PipelineListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PipelineListResp) GetData() []*PipelineListItem {
	if x != nil {
		return x.Data
	}
	return nil
}

// PipelineInstanceLogList
type PipelineInstanceLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineInstanceId string `protobuf:"bytes,1,opt,name=pipeline_instance_id,json=pipelineInstanceId,proto3" json:"pipeline_instance_id,omitempty"`
	Offset             int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *PipelineInstanceLogListReq) Reset() {
	*x = PipelineInstanceLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineInstanceLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineInstanceLogListReq) ProtoMessage() {}

func (x *PipelineInstanceLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineInstanceLogListReq.ProtoReflect.Descriptor instead.
func (*PipelineInstanceLogListReq) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{19}
}

func (x *PipelineInstanceLogListReq) GetPipelineInstanceId() string {
	if x != nil {
		return x.PipelineInstanceId
	}
	return ""
}

func (x *PipelineInstanceLogListReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PipelineInstanceLogListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log []*PipelineInstanceLog `protobuf:"bytes,1,rep,name=log,proto3" json:"log,omitempty"`
}

func (x *PipelineInstanceLogListResp) Reset() {
	*x = PipelineInstanceLogListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_malou_web_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineInstanceLogListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineInstanceLogListResp) ProtoMessage() {}

func (x *PipelineInstanceLogListResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_malou_web_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineInstanceLogListResp.ProtoReflect.Descriptor instead.
func (*PipelineInstanceLogListResp) Descriptor() ([]byte, []int) {
	return file_v1_malou_web_proto_rawDescGZIP(), []int{20}
}

func (x *PipelineInstanceLogListResp) GetLog() []*PipelineInstanceLog {
	if x != nil {
		return x.Log
	}
	return nil
}

var File_v1_malou_web_proto protoreflect.FileDescriptor

var file_v1_malou_web_proto_rawDesc = []byte{
	0x0a, 0x12, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6c, 0x6f, 0x75, 0x5f, 0x77, 0x65, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76,
	0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x36, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0xb2, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x2b, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e,
	0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x1a, 0x36, 0x0a,
	0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x36, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a,
	0x0d, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x94, 0x02, 0x0a, 0x10,
	0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xc8, 0x02, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e,
	0x76, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x29, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x77, 0x0a,
	0x0d, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4b, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x44, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53,
	0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0x35, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x22, 0x65, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x74, 0x65,
	0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0x35, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22,
	0x32, 0x0a, 0x0f, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x10, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53,
	0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4d, 0x0a, 0x0f, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x10, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x4f, 0x0a, 0x10, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x66, 0x0a, 0x1a, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x30,
	0x0a, 0x14, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x45, 0x0a, 0x1b, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x2a,
	0x2b, 0x0a, 0x10, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x01, 0x32, 0x84, 0x07, 0x0a,
	0x08, 0x4d, 0x61, 0x6c, 0x6f, 0x75, 0x57, 0x65, 0x62, 0x12, 0x51, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x52, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x2e,
	0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e,
	0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x2f, 0x7b, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x0e, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x0f, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x59,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22,
	0x13, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x5c, 0x0a, 0x0c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f,
	0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x51, 0x0a, 0x0c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x10, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a,
	0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xcb, 0x01, 0x0a, 0x17, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x75, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x6f, 0x5a, 0x32, 0x12, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x6f,
	0x67, 0x2f, 0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x39, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x6c, 0x6f, 0x67, 0x2f, 0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x7d, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_malou_web_proto_rawDescOnce sync.Once
	file_v1_malou_web_proto_rawDescData = file_v1_malou_web_proto_rawDesc
)

func file_v1_malou_web_proto_rawDescGZIP() []byte {
	file_v1_malou_web_proto_rawDescOnce.Do(func() {
		file_v1_malou_web_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_malou_web_proto_rawDescData)
	})
	return file_v1_malou_web_proto_rawDescData
}

var file_v1_malou_web_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_malou_web_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_v1_malou_web_proto_goTypes = []interface{}{
	(RunnerStatusType)(0),               // 0: RunnerStatusType
	(*CreateRunnerReq)(nil),             // 1: CreateRunnerReq
	(*CreateRunnerResp)(nil),            // 2: CreateRunnerResp
	(*UpdateRunnerReq)(nil),             // 3: UpdateRunnerReq
	(*UpdateRunnerResp)(nil),            // 4: UpdateRunnerResp
	(*RunnerInfoReq)(nil),               // 5: RunnerInfoReq
	(*RunnerInfoHealth)(nil),            // 6: RunnerInfoHealth
	(*RunnerInfoResp)(nil),              // 7: RunnerInfoResp
	(*RunnerListReq)(nil),               // 8: RunnerListReq
	(*RunnerListItem)(nil),              // 9: RunnerListItem
	(*RunnerListResp)(nil),              // 10: RunnerListResp
	(*CreatePipelineReq)(nil),           // 11: CreatePipelineReq
	(*CreatePipelineResp)(nil),          // 12: CreatePipelineResp
	(*UpdatePipelineReq)(nil),           // 13: UpdatePipelineReq
	(*UpdatePipelineResp)(nil),          // 14: UpdatePipelineResp
	(*PipelineInfoReq)(nil),             // 15: PipelineInfoReq
	(*PipelineInfoResp)(nil),            // 16: PipelineInfoResp
	(*PipelineListReq)(nil),             // 17: PipelineListReq
	(*PipelineListItem)(nil),            // 18: PipelineListItem
	(*PipelineListResp)(nil),            // 19: PipelineListResp
	(*PipelineInstanceLogListReq)(nil),  // 20: PipelineInstanceLogListReq
	(*PipelineInstanceLogListResp)(nil), // 21: PipelineInstanceLogListResp
	nil,                                 // 22: CreateRunnerReq.EnvEntry
	nil,                                 // 23: UpdateRunnerReq.EnvEntry
	nil,                                 // 24: RunnerInfoHealth.WorkerStatusEntry
	nil,                                 // 25: RunnerInfoResp.EnvEntry
	(*MemoryInfo)(nil),                  // 26: MemoryInfo
	(*DiskInfo)(nil),                    // 27: DiskInfo
	(*Step)(nil),                        // 28: Step
	(*PipelineInstanceLog)(nil),         // 29: PipelineInstanceLog
}
var file_v1_malou_web_proto_depIdxs = []int32{
	22, // 0: CreateRunnerReq.env:type_name -> CreateRunnerReq.EnvEntry
	23, // 1: UpdateRunnerReq.env:type_name -> UpdateRunnerReq.EnvEntry
	26, // 2: RunnerInfoHealth.memory_info:type_name -> MemoryInfo
	27, // 3: RunnerInfoHealth.disk_info:type_name -> DiskInfo
	24, // 4: RunnerInfoHealth.worker_status:type_name -> RunnerInfoHealth.WorkerStatusEntry
	25, // 5: RunnerInfoResp.env:type_name -> RunnerInfoResp.EnvEntry
	6,  // 6: RunnerInfoResp.health:type_name -> RunnerInfoHealth
	0,  // 7: RunnerInfoResp.status:type_name -> RunnerStatusType
	9,  // 8: RunnerListResp.data:type_name -> RunnerListItem
	28, // 9: CreatePipelineReq.steps:type_name -> Step
	28, // 10: UpdatePipelineReq.steps:type_name -> Step
	28, // 11: PipelineInfoResp.steps:type_name -> Step
	18, // 12: PipelineListResp.data:type_name -> PipelineListItem
	29, // 13: PipelineInstanceLogListResp.log:type_name -> PipelineInstanceLog
	1,  // 14: MalouWeb.CreateRunner:input_type -> CreateRunnerReq
	3,  // 15: MalouWeb.UpdateRunner:input_type -> UpdateRunnerReq
	5,  // 16: MalouWeb.RunnerInfo:input_type -> RunnerInfoReq
	8,  // 17: MalouWeb.RunnerList:input_type -> RunnerListReq
	11, // 18: MalouWeb.CreatePipeline:input_type -> CreatePipelineReq
	13, // 19: MalouWeb.UpdatePipeline:input_type -> UpdatePipelineReq
	15, // 20: MalouWeb.PipelineInfo:input_type -> PipelineInfoReq
	17, // 21: MalouWeb.PipelineList:input_type -> PipelineListReq
	20, // 22: MalouWeb.PipelineInstanceLogList:input_type -> PipelineInstanceLogListReq
	2,  // 23: MalouWeb.CreateRunner:output_type -> CreateRunnerResp
	4,  // 24: MalouWeb.UpdateRunner:output_type -> UpdateRunnerResp
	7,  // 25: MalouWeb.RunnerInfo:output_type -> RunnerInfoResp
	10, // 26: MalouWeb.RunnerList:output_type -> RunnerListResp
	12, // 27: MalouWeb.CreatePipeline:output_type -> CreatePipelineResp
	14, // 28: MalouWeb.UpdatePipeline:output_type -> UpdatePipelineResp
	16, // 29: MalouWeb.PipelineInfo:output_type -> PipelineInfoResp
	19, // 30: MalouWeb.PipelineList:output_type -> PipelineListResp
	21, // 31: MalouWeb.PipelineInstanceLogList:output_type -> PipelineInstanceLogListResp
	23, // [23:32] is the sub-list for method output_type
	14, // [14:23] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_v1_malou_web_proto_init() }
func file_v1_malou_web_proto_init() {
	if File_v1_malou_web_proto != nil {
		return
	}
	file_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_malou_web_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRunnerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRunnerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRunnerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRunnerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerInfoHealth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePipelineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePipelineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePipelineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePipelineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineInstanceLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_malou_web_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineInstanceLogListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_malou_web_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_malou_web_proto_goTypes,
		DependencyIndexes: file_v1_malou_web_proto_depIdxs,
		EnumInfos:         file_v1_malou_web_proto_enumTypes,
		MessageInfos:      file_v1_malou_web_proto_msgTypes,
	}.Build()
	File_v1_malou_web_proto = out.File
	file_v1_malou_web_proto_rawDesc = nil
	file_v1_malou_web_proto_goTypes = nil
	file_v1_malou_web_proto_depIdxs = nil
}
